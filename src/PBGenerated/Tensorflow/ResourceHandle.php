<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: resource_handle.proto

namespace Tensorflow;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protocol buffer representing a handle to a tensorflow resource. Handles are
 * not valid across executions, but can be serialized back and forth from within
 * a single run.
 *
 * Generated from protobuf message <code>tensorflow.ResourceHandle</code>
 */
class ResourceHandle extends \Google\Protobuf\Internal\Message
{
    /**
     * Unique name for the device containing the resource.
     *
     * Generated from protobuf field <code>string device = 1;</code>
     */
    private $device = '';
    /**
     * Container in which this resource is placed.
     *
     * Generated from protobuf field <code>string container = 2;</code>
     */
    private $container = '';
    /**
     * Unique name of this resource.
     *
     * Generated from protobuf field <code>string name = 3;</code>
     */
    private $name = '';
    /**
     * Hash code for the type of the resource. Is only valid in the same device
     * and in the same execution.
     *
     * Generated from protobuf field <code>uint64 hash_code = 4;</code>
     */
    private $hash_code = 0;
    /**
     * For debug-only, the name of the type pointed to by this handle, if
     * available.
     *
     * Generated from protobuf field <code>string maybe_type_name = 5;</code>
     */
    private $maybe_type_name = '';

    public function __construct() {
        \GPBMetadata\ResourceHandle::initOnce();
        parent::__construct();
    }

    /**
     * Unique name for the device containing the resource.
     *
     * Generated from protobuf field <code>string device = 1;</code>
     * @return string
     */
    public function getDevice()
    {
        return $this->device;
    }

    /**
     * Unique name for the device containing the resource.
     *
     * Generated from protobuf field <code>string device = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDevice($var)
    {
        GPBUtil::checkString($var, True);
        $this->device = $var;

        return $this;
    }

    /**
     * Container in which this resource is placed.
     *
     * Generated from protobuf field <code>string container = 2;</code>
     * @return string
     */
    public function getContainer()
    {
        return $this->container;
    }

    /**
     * Container in which this resource is placed.
     *
     * Generated from protobuf field <code>string container = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setContainer($var)
    {
        GPBUtil::checkString($var, True);
        $this->container = $var;

        return $this;
    }

    /**
     * Unique name of this resource.
     *
     * Generated from protobuf field <code>string name = 3;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Unique name of this resource.
     *
     * Generated from protobuf field <code>string name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Hash code for the type of the resource. Is only valid in the same device
     * and in the same execution.
     *
     * Generated from protobuf field <code>uint64 hash_code = 4;</code>
     * @return int|string
     */
    public function getHashCode()
    {
        return $this->hash_code;
    }

    /**
     * Hash code for the type of the resource. Is only valid in the same device
     * and in the same execution.
     *
     * Generated from protobuf field <code>uint64 hash_code = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setHashCode($var)
    {
        GPBUtil::checkUint64($var);
        $this->hash_code = $var;

        return $this;
    }

    /**
     * For debug-only, the name of the type pointed to by this handle, if
     * available.
     *
     * Generated from protobuf field <code>string maybe_type_name = 5;</code>
     * @return string
     */
    public function getMaybeTypeName()
    {
        return $this->maybe_type_name;
    }

    /**
     * For debug-only, the name of the type pointed to by this handle, if
     * available.
     *
     * Generated from protobuf field <code>string maybe_type_name = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setMaybeTypeName($var)
    {
        GPBUtil::checkString($var, True);
        $this->maybe_type_name = $var;

        return $this;
    }

}

