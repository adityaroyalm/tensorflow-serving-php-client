<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensor.proto

namespace Tensorflow;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protocol buffer representing a tensor.
 *
 * Generated from protobuf message <code>tensorflow.TensorProto</code>
 */
class TensorProto extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.tensorflow.DataType dtype = 1;</code>
     */
    private $dtype = 0;
    /**
     * Shape of the tensor.  TODO(touts): sort out the 0-rank issues.
     *
     * Generated from protobuf field <code>.tensorflow.TensorShapeProto tensor_shape = 2;</code>
     */
    private $tensor_shape = null;
    /**
     * Version number.
     * In version 0, if the "repeated xxx" representations contain only one
     * element, that element is repeated to fill the shape.  This makes it easy
     * to represent a constant Tensor with a single value.
     *
     * Generated from protobuf field <code>int32 version_number = 3;</code>
     */
    private $version_number = 0;
    /**
     * Serialized content from Tensor::AsProtoTensorContent(). This representation
     * can be used for all tensor types.
     *
     * Generated from protobuf field <code>bytes tensor_content = 4;</code>
     */
    private $tensor_content = '';
    /**
     * DT_HALF. Note that since protobuf has no int16 type, we'll have some
     * pointless zero padding for each value here.
     *
     * Generated from protobuf field <code>repeated int32 half_val = 13 [packed = true];</code>
     */
    private $half_val;
    /**
     * DT_FLOAT.
     *
     * Generated from protobuf field <code>repeated float float_val = 5 [packed = true];</code>
     */
    private $float_val;
    /**
     * DT_DOUBLE.
     *
     * Generated from protobuf field <code>repeated double double_val = 6 [packed = true];</code>
     */
    private $double_val;
    /**
     * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
     *
     * Generated from protobuf field <code>repeated int32 int_val = 7;</code>
     */
    private $int_val;
    /**
     * DT_STRING
     *
     * Generated from protobuf field <code>repeated bytes string_val = 8;</code>
     */
    private $string_val;
    /**
     * DT_COMPLEX64. scomplex_val(2*i) and scomplex_val(2*i+1) are real
     * and imaginary parts of i-th single precision complex.
     *
     * Generated from protobuf field <code>repeated float scomplex_val = 9 [packed = true];</code>
     */
    private $scomplex_val;
    /**
     * DT_INT64
     *
     * Generated from protobuf field <code>repeated int64 int64_val = 10 [packed = true];</code>
     */
    private $int64_val;
    /**
     * DT_BOOL
     *
     * Generated from protobuf field <code>repeated bool bool_val = 11 [packed = true];</code>
     */
    private $bool_val;
    /**
     * DT_COMPLEX128. dcomplex_val(2*i) and dcomplex_val(2*i+1) are real
     * and imaginary parts of i-th double precision complex.
     *
     * Generated from protobuf field <code>repeated double dcomplex_val = 12 [packed = true];</code>
     */
    private $dcomplex_val;
    /**
     * DT_RESOURCE
     *
     * Generated from protobuf field <code>repeated .tensorflow.ResourceHandle resource_handle_val = 14;</code>
     */
    private $resource_handle_val;

    public function __construct() {
        \GPBMetadata\Tensor::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>.tensorflow.DataType dtype = 1;</code>
     * @return int
     */
    public function getDtype()
    {
        return $this->dtype;
    }

    /**
     * Generated from protobuf field <code>.tensorflow.DataType dtype = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setDtype($var)
    {
        GPBUtil::checkEnum($var, \Tensorflow\DataType::class);
        $this->dtype = $var;

        return $this;
    }

    /**
     * Shape of the tensor.  TODO(touts): sort out the 0-rank issues.
     *
     * Generated from protobuf field <code>.tensorflow.TensorShapeProto tensor_shape = 2;</code>
     * @return \Tensorflow\TensorShapeProto
     */
    public function getTensorShape()
    {
        return $this->tensor_shape;
    }

    /**
     * Shape of the tensor.  TODO(touts): sort out the 0-rank issues.
     *
     * Generated from protobuf field <code>.tensorflow.TensorShapeProto tensor_shape = 2;</code>
     * @param \Tensorflow\TensorShapeProto $var
     * @return $this
     */
    public function setTensorShape($var)
    {
        GPBUtil::checkMessage($var, \Tensorflow\TensorShapeProto::class);
        $this->tensor_shape = $var;

        return $this;
    }

    /**
     * Version number.
     * In version 0, if the "repeated xxx" representations contain only one
     * element, that element is repeated to fill the shape.  This makes it easy
     * to represent a constant Tensor with a single value.
     *
     * Generated from protobuf field <code>int32 version_number = 3;</code>
     * @return int
     */
    public function getVersionNumber()
    {
        return $this->version_number;
    }

    /**
     * Version number.
     * In version 0, if the "repeated xxx" representations contain only one
     * element, that element is repeated to fill the shape.  This makes it easy
     * to represent a constant Tensor with a single value.
     *
     * Generated from protobuf field <code>int32 version_number = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setVersionNumber($var)
    {
        GPBUtil::checkInt32($var);
        $this->version_number = $var;

        return $this;
    }

    /**
     * Serialized content from Tensor::AsProtoTensorContent(). This representation
     * can be used for all tensor types.
     *
     * Generated from protobuf field <code>bytes tensor_content = 4;</code>
     * @return string
     */
    public function getTensorContent()
    {
        return $this->tensor_content;
    }

    /**
     * Serialized content from Tensor::AsProtoTensorContent(). This representation
     * can be used for all tensor types.
     *
     * Generated from protobuf field <code>bytes tensor_content = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setTensorContent($var)
    {
        GPBUtil::checkString($var, False);
        $this->tensor_content = $var;

        return $this;
    }

    /**
     * DT_HALF. Note that since protobuf has no int16 type, we'll have some
     * pointless zero padding for each value here.
     *
     * Generated from protobuf field <code>repeated int32 half_val = 13 [packed = true];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getHalfVal()
    {
        return $this->half_val;
    }

    /**
     * DT_HALF. Note that since protobuf has no int16 type, we'll have some
     * pointless zero padding for each value here.
     *
     * Generated from protobuf field <code>repeated int32 half_val = 13 [packed = true];</code>
     * @param int[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setHalfVal($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::INT32);
        $this->half_val = $arr;

        return $this;
    }

    /**
     * DT_FLOAT.
     *
     * Generated from protobuf field <code>repeated float float_val = 5 [packed = true];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFloatVal()
    {
        return $this->float_val;
    }

    /**
     * DT_FLOAT.
     *
     * Generated from protobuf field <code>repeated float float_val = 5 [packed = true];</code>
     * @param float[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFloatVal($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::FLOAT);
        $this->float_val = $arr;

        return $this;
    }

    /**
     * DT_DOUBLE.
     *
     * Generated from protobuf field <code>repeated double double_val = 6 [packed = true];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDoubleVal()
    {
        return $this->double_val;
    }

    /**
     * DT_DOUBLE.
     *
     * Generated from protobuf field <code>repeated double double_val = 6 [packed = true];</code>
     * @param float[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDoubleVal($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::DOUBLE);
        $this->double_val = $arr;

        return $this;
    }

    /**
     * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
     *
     * Generated from protobuf field <code>repeated int32 int_val = 7;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getIntVal()
    {
        return $this->int_val;
    }

    /**
     * DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
     *
     * Generated from protobuf field <code>repeated int32 int_val = 7;</code>
     * @param int[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setIntVal($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::INT32);
        $this->int_val = $arr;

        return $this;
    }

    /**
     * DT_STRING
     *
     * Generated from protobuf field <code>repeated bytes string_val = 8;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getStringVal()
    {
        return $this->string_val;
    }

    /**
     * DT_STRING
     *
     * Generated from protobuf field <code>repeated bytes string_val = 8;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setStringVal($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::BYTES);
        $this->string_val = $arr;

        return $this;
    }

    /**
     * DT_COMPLEX64. scomplex_val(2*i) and scomplex_val(2*i+1) are real
     * and imaginary parts of i-th single precision complex.
     *
     * Generated from protobuf field <code>repeated float scomplex_val = 9 [packed = true];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getScomplexVal()
    {
        return $this->scomplex_val;
    }

    /**
     * DT_COMPLEX64. scomplex_val(2*i) and scomplex_val(2*i+1) are real
     * and imaginary parts of i-th single precision complex.
     *
     * Generated from protobuf field <code>repeated float scomplex_val = 9 [packed = true];</code>
     * @param float[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setScomplexVal($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::FLOAT);
        $this->scomplex_val = $arr;

        return $this;
    }

    /**
     * DT_INT64
     *
     * Generated from protobuf field <code>repeated int64 int64_val = 10 [packed = true];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInt64Val()
    {
        return $this->int64_val;
    }

    /**
     * DT_INT64
     *
     * Generated from protobuf field <code>repeated int64 int64_val = 10 [packed = true];</code>
     * @param int[]|string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInt64Val($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::INT64);
        $this->int64_val = $arr;

        return $this;
    }

    /**
     * DT_BOOL
     *
     * Generated from protobuf field <code>repeated bool bool_val = 11 [packed = true];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getBoolVal()
    {
        return $this->bool_val;
    }

    /**
     * DT_BOOL
     *
     * Generated from protobuf field <code>repeated bool bool_val = 11 [packed = true];</code>
     * @param bool[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setBoolVal($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::BOOL);
        $this->bool_val = $arr;

        return $this;
    }

    /**
     * DT_COMPLEX128. dcomplex_val(2*i) and dcomplex_val(2*i+1) are real
     * and imaginary parts of i-th double precision complex.
     *
     * Generated from protobuf field <code>repeated double dcomplex_val = 12 [packed = true];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDcomplexVal()
    {
        return $this->dcomplex_val;
    }

    /**
     * DT_COMPLEX128. dcomplex_val(2*i) and dcomplex_val(2*i+1) are real
     * and imaginary parts of i-th double precision complex.
     *
     * Generated from protobuf field <code>repeated double dcomplex_val = 12 [packed = true];</code>
     * @param float[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDcomplexVal($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::DOUBLE);
        $this->dcomplex_val = $arr;

        return $this;
    }

    /**
     * DT_RESOURCE
     *
     * Generated from protobuf field <code>repeated .tensorflow.ResourceHandle resource_handle_val = 14;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getResourceHandleVal()
    {
        return $this->resource_handle_val;
    }

    /**
     * DT_RESOURCE
     *
     * Generated from protobuf field <code>repeated .tensorflow.ResourceHandle resource_handle_val = 14;</code>
     * @param \Tensorflow\ResourceHandle[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setResourceHandleVal($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Tensorflow\ResourceHandle::class);
        $this->resource_handle_val = $arr;

        return $this;
    }

}

